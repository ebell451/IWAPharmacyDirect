# yaml-language-server: $schema=https://fortify.github.io/fcli/schemas/action/fcli-action-schema-1.1.0.json

author: Fortify
usage:
  header: (PREVIEW) Generate a release report. 
  description: |
    This action generates a detailed listing of issues for a given release. 
    Based on user feedback on this initial version of this action, 
    parameters and output of this action may change in the next couple of fcli releases.

defaults:
  requestTarget: fod
  
parameters:
  - name: file
    cliAliases: f
    description: "Optional output file name (or 'stdout' / 'stderr'). Default value: stdout"
    required: false
    defaultValue: stdout
  - name: release
    cliAliases: rel
    description: "Required release id or <appName>:[<microserviceName>:]<releaseName>"
    type: release_single
  - name: scan-type
    cliAliases: t
    description: "Scan type(s) for which to list vulnerabilities. Default value: all scan types"
    required: false
    defaultValue: Static|Dynamic|Mobile|OpenSource
  - name: include-suppresed
    description: "Whether to include suppressed issues: Default value: false"
    required: false
    defaultValue: false
  - name: include-fixed
    description: "Whether to include fixed issues: Default value: false"
    required: false
    defaultValue: false
  
steps:
  - set: 
      # Add short alias for release object, as we reference it a lot
    - name: r 
      value: ${parameters.release}
      # Define output date format
    - name: dateFmt
      value: YYYY-MM-dd HH:mm                   
  - progress: Processing issue data
  - requests:
    - name: issues
      uri: /api/v3/releases/${r.releaseId}/vulnerabilities?limit=50
      query:
        includeFixed: ${parameters['include-fixed']}
        includeSuppresed: ${parameters['include-suppresed']}
        filters: scantype:${parameters['scan-type']}
        orderBy: severity
      pagingProgress:
        postPageProcess: Processed ${totalIssueCount?:0} of ${issues_raw.totalCount} issues
      forEach:
        name: issue
        embed:
          - name: details
            uri: /api/v3/releases/${parameters.release.releaseId}/vulnerabilities/${issue.vulnId}/details
        do:
          - append:
            - if: ${issue.status=='Existing'}
              name: existingIssues
              valueTemplate: mdIssueListItem
            - if: ${issue.status=='Fix Validated'}
              name: removedIssues
              valueTemplate: mdIssueListItem
            - if: ${(issue.status=='New' || issue.status=='Reopen')}
              name: newIssues
              valueTemplate: mdIssueListItem

  - write:
    - to: ${parameters.file}
      valueTemplate: summary-md
    - if: ${parameters.file!='stdout'}
      to: stdout
      value: |
        Output written to ${parameters.file}

valueTemplates:
  - name: summary-md
    contents: |
      # Fortify on Demand Release Report
      
      ## [${r.applicationName}${#isNotBlank(r.microserviceNae)?'- '+r.microserviceName:''} - ${r.releaseName}](${#fod.releaseBrowserUrl(r)})
      
      Report generated on: ${#formatDateTime(dateFmt)}
      
      ### Security Policy
      **Rating:** ${#repeat("&bigstar;", r.rating)}${#repeat("&star;", 5-r.rating)}
      **Status:** ${r.isPassed?'Pass':'Fail'}
      
      ### Issue Counts
      | Type            | Last Scan Date   | Critical | High     | Medium   | Low      |
      | --------------- | ---------------- | -------- | -------- | -------- | -------- |
      | **Static**      | ${(#isBlank(r.staticScanDate)?#fmt('%-16s', 'N/A'):#formatDateTime(dateFmt, r.staticScanDate))  +' | '+#fmt('%8s', r.staticCritical)                                   +' | '+#fmt('%8s', r.staticHigh)                           +' | '+#fmt('%8s', r.staticMedium)                               +' | '+#fmt('%8s', r.staticLow)                         +' |'}
      | **Dynamic**     | ${(#isBlank(r.dynamicScanDate)?#fmt('%-16s', 'N/A'):#formatDateTime(dateFmt, r.dynamicScanDate))+' | '+#fmt('%8s', r.dynamicCritical)                                  +' | '+#fmt('%8s', r.dynamicHigh)                          +' | '+#fmt('%8s', r.dynamicMedium)                              +' | '+#fmt('%8s', r.dynamicLow)                        +' |'}
      | **Mobile**      | ${(#isBlank(r.mobileScanDate)?#fmt('%-16s', 'N/A'):#formatDateTime(dateFmt, r.mobileScanDate))  +' | '+#fmt('%8s', r.mobileCritical)                                   +' | '+#fmt('%8s', r.mobileHigh)                           +' | '+#fmt('%8s', r.mobileMedium)                               +' | '+#fmt('%8s', r.mobileLow)                         +' |'}
      | **Open Source** | ${(#isBlank(r.staticScanDate)?#fmt('%-16s', 'N/A'):#formatDateTime(dateFmt, r.staticScanDate))  +' | '+#fmt('%8s', r.openSourceCritical)                               +' | '+#fmt('%8s', r.openSourceHigh)                       +' | '+#fmt('%8s', r.openSourceMedium)                           +' | '+#fmt('%8s', r.openSourceLow)                     +' |'}
      | **Total**       |                  | ${#fmt('%8s', r.staticCritical+r.dynamicCritical+r.mobileCritical+r.openSourceCritical)+' | '+#fmt('%8s', r.staticHigh+r.dynamicHigh+r.mobileHigh+r.openSourceHigh)+' | '+#fmt('%8s', r.staticMedium+r.dynamicMedium+r.mobileMedium+r.openSourceMedium)+' | '+#fmt('%8s', r.staticLow+r.dynamicLow+r.mobileLow+r.openSourceLow)+' |'}

      ### Existing Issues
      
      ${existingIssues==null 
        ? "* No existing issues were detected" 
        : ("* "+#join('\n* ',existingIssues))}

      ### New Issues
      
      ${newIssues==null 
        ? "* No new or re-introduced issues were detected" 
        : ("* "+#join('\n* ',newIssues))}
        
      ### Removed Issues
      
      ${removedIssues==null 
        ? "* No removed issues were detected" 
        : ("* "+#join('\n* ',removedIssues))}

  - name: mdIssueListItem
    contents: "${issue.severityString} (${issue.scantype}) - ${issue.category}:    \n[${issue.primaryLocationFull}${issue.lineNumber==null?'':':'+issue.lineNumber}](${#fod.issueBrowserUrl(issue)})\n\nSummary:\n${issue.details.summary}"
      
          
